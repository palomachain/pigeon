// Code generated by mockery v2.11.0. DO NOT EDIT.

package mocks

import (
	big "math/big"

	chain "github.com/palomachain/pigeon/chain"
	config "github.com/palomachain/pigeon/config"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// EvmFactorier is an autogenerated mock type for the EvmFactorier type
type EvmFactorier struct {
	mock.Mock
}

// Build provides a mock function with given fields: cfg, chainReferenceID, smartContractID, smartContractABIJson, smartContractAddress, chainID
func (_m *EvmFactorier) Build(cfg config.EVM, chainReferenceID string, smartContractID string, smartContractABIJson string, smartContractAddress string, chainID *big.Int) (chain.Processor, error) {
	ret := _m.Called(cfg, chainReferenceID, smartContractID, smartContractABIJson, smartContractAddress, chainID)

	var r0 chain.Processor
	if rf, ok := ret.Get(0).(func(config.EVM, string, string, string, string, *big.Int) chain.Processor); ok {
		r0 = rf(cfg, chainReferenceID, smartContractID, smartContractABIJson, smartContractAddress, chainID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chain.Processor)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(config.EVM, string, string, string, string, *big.Int) error); ok {
		r1 = rf(cfg, chainReferenceID, smartContractID, smartContractABIJson, smartContractAddress, chainID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEvmFactorier creates a new instance of EvmFactorier. It also registers a cleanup function to assert the mocks expectations.
func NewEvmFactorier(t testing.TB) *EvmFactorier {
	mock := &EvmFactorier{}

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
