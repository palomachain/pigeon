syntax = "proto3";
package volumefi.paloma.consensus;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/volumefi/conductor/types/paloma";

// Query defines the gRPC querier service.
service Query {
  // Queries a list of QueuedMessagesForSigning items.
	rpc QueuedMessagesForSigning(QueryQueuedMessagesForSigningRequest) returns (QueryQueuedMessagesForSigningResponse) {
		option (google.api.http).get = "/volumefi/paloma/consensus/queued_messages_for_signing";
	}
}

message QueryQueuedMessagesForSigningRequest {
  string valAddress = 1;
  string queueTypeName = 2;
}

message QueryQueuedMessagesForSigningResponse {
  repeated MessageToSign messageToSign = 1;
}

message MessageToSign {
  bytes nonce = 1;
  uint64 id = 2;
  google.protobuf.Any msg = 3;
}

service QueryValset {
    rpc ValidatorInfo(QueryValidatorInfoRequest) returns (QueryValidatorInfoResponse) {
        option (google.api.http).get = "/volumefi/paloma/valset/validator_info/{valAddr}";
    }
}


message QueryValidatorInfoRequest {
  string valAddr = 1;
}

message QueryValidatorInfoResponse {
  Validator validator = 1;
}

message Validator {
  bytes shareCount = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // TODO: make this ed25519 pub key instead of bytes
  bytes pubKey = 2;

  ValidatorState state = 3;

  repeated ExternalChainInfo externalChainInfos = 4;

  string address = 5;
}


message ExternalChainInfo {
  uint64 ID = 1;
  string chainID = 2;
  string address = 3;
}

enum ValidatorState {
  NONE = 0;
  ACTIVE = 1;
  JAILED = 2;
}
